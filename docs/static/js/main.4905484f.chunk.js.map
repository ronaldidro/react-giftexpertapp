{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAgCeA,EA7BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAiBzC,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAqBO,OACvCN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,MAAQT,EACRU,SAlBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,QAkBnBG,YAAY,2B,+BC1BPC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACfC,EADe,iDACkCC,UAAUH,GAD5C,+DAEFI,MAAMF,GAFJ,cAEfG,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATjB,kBAadM,GAbc,4CAAH,sDCWLO,EATK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC5B,OACE,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WC6BSO,EA/BC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDN,SAAEA,GAAe,IAAD,EAEhBf,mBAAS,CACjCsB,KAAM,GACNa,SAAS,IAJ+B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAmB1C,OAZAC,qBAAU,WACRxB,EAAQC,GACLwB,MAAM,SAAAC,GAELH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAId,CAACpB,IAEGqB,EDT0BK,CAAa1B,GAAjCa,EATmB,EASxBN,KAAaa,EATW,EASXA,QAErB,OACE,qCACE,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,uBACb,qBAAKA,UAAU,YAAf,SACE,6BAEIH,EAAOJ,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAEOA,GADCA,EAAIC,eESXgB,EA7BM,WAAO,IAAD,EAEW1C,mBAAS,CAAC,QAFrB,mBAElB2C,EAFkB,KAEN5C,EAFM,KASzB,OACE,qCACE,gDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEI4C,EAAWnB,KAAI,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEEA,SAAWA,GADLA,Y,MClBpB6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4905484f.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if(inputValue.trim().length > 2) {\r\n      setCategories(cats => [inputValue, ... cats]);\r\n      setInputValue('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input \r\n        type=\"text\" \r\n        value={ inputValue }\r\n        onChange={ handleInputChange }\r\n        placeholder=\"Busca lo que sea...\"\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddCategory\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async ( category ) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=BpJOGhs6Zu3JsxmSswCjroNKZjykEDPV`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map(img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  })\r\n\r\n  return gifs;\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={ url } alt={ title } />\r\n      <p> { title } </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n  \r\n  // const [images, setImages] = useState([])\r\n  \r\n  // useEffect(() => {\r\n  //   getGifs(category)\r\n  //     .then( imgs => setImages(imgs))\r\n  // }, [category])\r\n\r\n  const { data:images, loading } = useFetchGifs(category);\r\n  \r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n      { loading && <p className=\"animate__animated animate__flash\">Loading..</p> }\r\n      <div className=\"card-grid\">\r\n        <ol>\r\n          {\r\n            images.map( img => (\r\n              <GifGridItem \r\n                key={ img.id }\r\n                { ...img } \r\n              />\r\n            ))\r\n          }\r\n        </ol>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n  \r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n      .then( imgs => {\r\n        \r\n        setState({\r\n          data: imgs,\r\n          loading: false\r\n        });\r\n\r\n      })\r\n  }, [category]);\r\n\r\n  return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['DBZ'])\r\n\r\n  // const handleAdd = () => {\r\n  //   // setCategories([...categories, 'DB']);\r\n  //   setCategories(cats => [... cats, 'DB']);\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <h2>Gif Expert App</h2>\r\n      <AddCategory setCategories={ setCategories } />\r\n      <hr />\r\n\r\n      <ol>\r\n        {\r\n          categories.map(category => (\r\n            <GifGrid \r\n              key={ category }\r\n              category={ category } \r\n            />\r\n          ))\r\n        }\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,  \n  document.getElementById('root')\n);"],"sourceRoot":""}